import pandas as pd

df_texts = pd.read_csv('static_texts.csv', sep=',')
df_signals_sma = pd.read_csv('historic_signals_rsi.csv', sep=';')
df_signals_rsi = pd.read_csv('historic_signals_sma.csv', sep=';')
df_text_signals_sma = pd.DataFrame(columns=['text', 'button_text', 'url'])
df_text_signals_rsi = pd.DataFrame(columns=['text', 'button_text', 'url'])

# –¶–∏–∫–ª —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Ç—Ä–µ—Ö —Å–∏–≥–Ω–∞–ª–æ–≤ SMA
# –¢–µ–∫—Å—Ç —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ df_text_signals_sma
for i in range(-1, -4, -1):
    if df_signals_sma.iloc[i].buy_flag == 1:
        action_sma = "üü¢ BUY"
        action_sma_2 = '‚Üó'
    else:
        action_sma = "üî¥ SELL"
        action_sma_2 = '‚Üò'
    ticker_sma = df_signals_sma.iloc[i].ticker
    last_price_sma = df_signals_sma.iloc[i].last_price
    date_sma = df_signals_sma.iloc[i].datetime
    currency_sma = df_signals_sma.iloc[i].currency
    share_name_sma = df_signals_sma.iloc[i].name
    investments_text_sma = f"–ö—É–ø–∏—Ç—å <b>{ticker_sma}</b> –ø–æ <b>{last_price_sma} {currency_sma}<b> –≤ –¢–∏–Ω—å–∫–æ—Ñ—Ñ –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏—è—Ö"
    signal_text_sma = f"{action_sma}\n" \
                      f"{share_name_sma} (${ticker_sma}) {last_price_sma} {currency_sma}\n" \
                      f"{action_sma_2} CROSS-SMA\n" \
                      f"üïì{date_sma}"  # TODO –∑–∞–º–µ–Ω–∏—Ç—å –º–µ—Å—è—Ü –Ω–∞ –ú–ê–ô –≤–º–µ—Å—Ç–æ 05? –î–æ–±–∞–≤–∏—Ç—å –≤—Ä–µ–º—è —Å–∏–≥–Ω–∞–ª–∞,
    # TODO –¥–æ–±–∞–≤–∏—Ç—å –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å
    buy_button_text_sma = f"–ö—É–ø–∏—Ç—å <b>{ticker_sma}</b> –ø–æ <b>{last_price_sma} {currency_sma}<b> –≤ –¢–∏–Ω—å–∫–æ—Ñ—Ñ –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏—è—Ö"
    user_id = 1  # TODO –∏—Å—Ä–ø–∞–≤–∏—Ç—å
    url_sma = f'http://www.tinkoff.ru/invest/stocks/{ticker_sma}?utm_source=mayak_bot&utm_content={user_id}'
    df_text_signals_sma.loc[-i] = [signal_text_sma, buy_button_text_sma, url_sma]  # TODO –∏–∑–º–µ–Ω–∏—Ç—å –∏–Ω–¥–µ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏–µ DF

# –¶–∏–∫–ª —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Ç—Ä–µ—Ö —Å–∏–≥–Ω–∞–ª–æ–≤ RSI
# –¢–µ–∫—Å—Ç —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ df_text_signals_rsi # TODO –æ–±—ä–µ–¥–∏–Ω–∏—Ç—å 2 —Ü–∏–∫–ª–∞ –≤ –æ–¥–Ω—É —Ñ—É–Ω–∫—Ü–∏—é –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö CSV?
for i in range(-1, -4, -1):
    if df_signals_rsi.iloc[i].buy_flag == 1:
        action_rsi = 'üü¢ BUY'
        action_rsi_2 = 'üìçRSI –¥–æ—Å—Ç–∏–≥ –Ω–∏–∂–Ω–µ–≥–æ —É—Ä–æ–≤–Ω—è'
    else:
        action_rsi = 'üî¥ SELL'
        action_rsi_2 = 'üìçRSI –¥–æ—Å—Ç–∏–≥ –≤–µ—Ä—Ö–Ω–µ–≥–æ —É—Ä–æ–≤–Ω—è'
    ticker_rsi = df_signals_rsi.iloc[i].ticker
    last_price_rsi = df_signals_rsi.iloc[i].last_price
    date_rsi = df_signals_rsi.iloc[i].datetime
    currency_rsi = 'USD'  # TODO currency_rsi = df_signals_rsi.iloc[i].currency
    share_name_rsi = df_signals_rsi.iloc[i].name

    investments_text_rsi = f"–ö—É–ø–∏—Ç—å <b>{ticker_rsi}</b> –ø–æ <b>{last_price_rsi} {currency_rsi}<b> –≤ –¢–∏–Ω—å–∫–æ—Ñ—Ñ –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏—è—Ö"
    signal_text_rsi = f"{action_rsi}\n" \
                      f"{share_name_rsi} (${ticker_rsi}) {last_price_rsi} {currency_rsi}\n" \
                      f"{action_rsi_2}\n" \
                      f"üïì{date_rsi}"  # TODO –∑–∞–º–µ–Ω–∏—Ç—å –º–µ—Å—è—Ü –Ω–∞ –ú–ê–ô –≤–º–µ—Å—Ç–æ 05? –î–æ–±–∞–≤–∏—Ç—å –≤—Ä–µ–º—è —Å–∏–≥–Ω–∞–ª–∞,
    # TODO –¥–æ–±–∞–≤–∏—Ç—å –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å
    buy_button_text_rsi = f"–ö—É–ø–∏—Ç—å <b>{ticker_rsi}</b> –ø–æ <b>{last_price_rsi} {currency_rsi}<b> –≤ –¢–∏–Ω—å–∫–æ—Ñ—Ñ –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏—è—Ö"
    user_id = 1  # TODO –∏—Å—Ä–ø–∞–≤–∏—Ç—å
    url_rsi = f'http://www.tinkoff.ru/invest/stocks/{ticker_rsi}?utm_source=mayak_bot&utm_content={user_id}'
    df_text_signals_rsi.loc[-i] = [signal_text_rsi, buy_button_text_rsi, url_rsi]

sma_strategy_link = df_texts.str_info[0]
rsi_strategy_link = df_texts.str_info[1]
strategy_info = df_texts.strategy_choice[3]  # –°–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ —Å—Ç—Ä–∞—Ç–µ–≥–∏—è—Ö
strategy_with_links = (f'{strategy_info}\n'
                       f'\n'
                       f'<a href="{sma_strategy_link}"><b>–°—Ä–µ–¥–Ω–µ–µ —Å–∫–æ–ª—å–∑—è—â–µ–µ (cross-SMA)</b></a>\n'
                       f'<a href="{rsi_strategy_link}"><b>–ü–µ—Ä–µ–ø—Ä–æ–¥–∞–Ω–Ω–æ—Å—Ç—å –ø–æ RSI</b></a>')

add_new_strategy = df_texts.strategy[0]  # –°–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –ø–æ–¥–∫–ª—é—á–∏—Ç—å –µ—â—ë –æ–¥–Ω—É —Å—Ç—Ä–∞—Ç–µ–≥–∏—é
rsi_chosen = df_texts.menu[0]
sma_chosen = df_texts.menu[1]

ask_feedback = df_texts.feedback[0]
feedback_text = df_texts.feedback[1]
positive_answer = df_texts.feedback[2]
negative_answer = df_texts.feedback[3]

stock_choice = df_texts.stock_choice[0]
nasdaq100_chosen = df_texts.stock_choice[3]
sp500_chosen = df_texts.stock_choice[4]
all_shares_chosen = df_texts.stock_choice[5]

time_settings = df_texts.time[0]
time_settings_unlimited = df_texts.time[1]

off_signals = df_texts.off_signals[0]

hello = df_texts.hello[1]
hello_2 = df_texts.hello[2]
start_created = (f'{hello}\n'
                 f'\n'
                 f'<a href="{sma_strategy_link}"><b>–°—Ä–µ–¥–Ω–µ–µ —Å–∫–æ–ª—å–∑—è—â–µ–µ (cross-SMA)</b></a>\n'
                 f'<a href="{rsi_strategy_link}"><b>–ü–µ—Ä–µ–ø—Ä–æ–¥–∞–Ω–Ω–æ—Å—Ç—å –ø–æ RSI</b></a>\n'
                 f'\n'
                 f'{hello_2}')
start_not_created = (f'{hello}\n'
                     f'\n'
                     f'<a href="{sma_strategy_link}"><b>–°—Ä–µ–¥–Ω–µ–µ —Å–∫–æ–ª—å–∑—è—â–µ–µ (cross-SMA)</b></a>\n'
                     f'<a href="{rsi_strategy_link}"><b>–ü–µ—Ä–µ–ø—Ä–æ–¥–∞–Ω–Ω–æ—Å—Ç—å –ø–æ RSI</b></a>\n'
                     f'\n'
                     f'{hello_2}')
